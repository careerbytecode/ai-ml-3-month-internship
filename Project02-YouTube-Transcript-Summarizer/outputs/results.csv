kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8, python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make  name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print value age variable . name variable separate using underscore makes code readable see would happen .  Python programming languages need convert type variable different type tutorial im going show bunch cool things . I want to write basic calculator program enter two numbers type whole number number number decimal point 10 integer 101 float int float number 101 20 got error error saying python concatenate strings floats strings line four string
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8,python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks learning python learning automation data science web development let know comment section right first thing want head pythonorg download latest version python go downloads select latest version python downloads folder see package simply double click youre going see python installer youre windows see checkbox add python path make sure check really important otherwise youre going able follow tutorial simply click continue one time agree terms install latest version python need enter username password computer lets real quick next need install code editor use code editor write code execute popular code editor python pycharm get jetbrainscom pycharm page click download see two different editions one professional edition commercial also community edition free open source going download community edition downloads folder package lets double click youre windows youre going see installation wizard simply click next button install pycharm youre mac need drag pycharm drop onto applications folder lets open first time open pycharm configure settings dont want spend time going click skip remaining set defaults lets create new project specify location name python project lets append hello world path python project going saved lets click create window see content project heres hello world project currently one folder inside project vn short virtual environment well talk virtual environments future currently dont python files inside project real application consist tens hundreds even thousands python files lets right click project name go new python file going call file collapse project window clicking icon space lets write first python code going write print lowercase add parentheses add quotes either single quotes double quotes inside code going write hello world call string string means string sequence characters simple words means textual data python many programming languages whenever dealing textual data always surround text quotes python use single double quotes print see function built python use print message application window let show run code top go run menu select run note shortcut associated command always use shortcuts increase productivity lets click select app see little window call terminal window shows output program heres hello world message printed terminal window learn python learn build applications graphical user interface thats advanced topic lets worry alright lets talk variables use variables temporarily store data computers memory example store price product someones name email age let show declare variable start typing name variable lets say age add equal sign type value lets say 20 storing number 20 somewhere computers memory attaching age label memory location read value memory location print terminal instead printing hello world want print value age variable im going delete inside parenthesis type age note im adding quotes run program well see text h terminal dont want want value age variable lets remove quote print value age variable toolbar click play icon run program use shortcut showed last video shortcut mac thats ctrl shift r go see value age variable also change value variable example line 2 set 8 30 run program see 30 see program gets executed top bottom declare use variable lets look examples im going declare another variable called price set 1995 python use numbers decimal point whole numbers also declare variable assign string value lets say first underline name want use multiple words name variable separate using underscore makes code readable see would happen didnt use underline easily readable always separate multiple words underscore set string use single quotes double quotes lets say march also special type value called boolean value true false like yes english let show im going declare another variable called online set true could also set false called boolean value note python case sensitive language sensitive lowercase uppercase letters case use lowercase f see error recognized python false capital f special keyword python represents boolean false value declare use variables python right heres little exercise imagine want write program hospital going check patient named john smith hes 20 years old new patient want declare variables store values use comment box share code others tutorial im going show receive input user python another builtin function called input use read value terminal window let show add parenthesis type string type message like name question mark followed space see need space second lets run program get message enter value click see carrot separated question mark white space added type value lets say john press enter function return value entered terminal window get value store variable lets declare variable called name set return value input function print greeting message user use print function say hello space string want add value name variable use plus sign type name called string concatenation combining string another string lets run program see happens name mosh get message hello mosh use input function python youll learn three types data python numbers strings booleans times want convert value variable one type another let show going use input function read users birth year enter birth input function going return value store variable called birth underline year okay lets write code calculate age user write expression like currently year 2020 2020 minus birth year expression piece code going produce value store value variable lets call variable age lets print age terminal lets run program see happens birth year 1982 enter oops program crashed whenever see red message indicates error error occurred file apppi line two right see piece code generated error expression 2020 minus birth year see type error unsupported types subtraction int stir well end short integer represents whole number programming 2020 example integer birth year example string whenever call input function function would return value string even enter number words entered 1982 input function returned string characters 1982 string different number 1982 theyre completely different types case let delete lines reason got error try subtract string integer code looks like 1982 python doesnt know subtract string integer solve problem need convert string integer python bunch builtin functions converting types variables end function pass burst return new numeric representation birth year solve problem need replace string end function lets see whats going first line call input function returns string second line pass string end function function return numeric representation burst year subtract 2020 get age store age variable lets run program 1982 go im 38 years old function works also another builtin function called float converting value floating point number floating point number python programming languages number decimal point 10 integer 101 float int float also bool converting value boolean finally stir converting value string builtin functions converting type variables heres little exercise want write basic calculator program enter two numbers type whole number number decimal point program print sum two numbers pause video spend two minutes exercise see solution right first going call input function read first number get result store variable called first lets declare another variable called second read second number calculate sum first plus second lets see happens print sum terminal enter 10 20 instead 30 get 10 20 combining concatenating two strings told input function returns string line equivalent first equals 10 dealing string integer similarly second going 20 string combine two strings 10 plus 20 get 10 20 dealing textual data okay solve problem need convert values read numeric representation going pass first int function well lets run program enter 10 20 get 30 enter floating point number 101 20 got error solve problem need treat values floats instead function going use float function lets run program one time enter whole number floating point number result correct lets add label sum plus sum lets run program one time 10 20 got error error saying python concatenate strings floats strings line four string concatenating float result expression floating point number adding two floats result float well python doesnt know evaluate code like doesnt know concatenate float string solve problem need convert sum string use stir function lets run program 10 plus 201 heres result one last thing example im calling float function time want calculate sum two numbers requirement call float function input function returns string pass string float function take look float parenthesis like value passing float function value returned input function similarly call float function change expression first plus second another way write piece code type conversion important python programming languages times need convert type variable different type tutorial im going show bunch cool things strings python lets start declaring variable called course set python beginners string technically object object python like object real world metaphor think remote control tv remote control object bunch capabilities bunch buttons turning tv turning changing volume program course variable storing string object string object bunch capabilities type course dot see capabilities available string object basically functions call like print input functions difference print input functions general purpose functions dont belong particular object functions see specific strings accurately refer methods function part object refer function method lets look examples function method called upper use convert string uppercase print courseupper run program see course uppercase pretty useful need understand upper method change original string return new string right print course see course variable affected upper method returns new string similarly another method called lower converting string lowercase method called find see string contains character sequence characters example pass return index first occurrence string python index first character string 0 0 1 2 3 4 run program youre going see one terminal index 1 take look first im going delete line dont need anymore also lets line lets run program go told python sensitive lowercase uppercase letters pass uppercase find method returns negative 1 dont uppercase string also pass sequence characters example 4 return index word 4 take look 7 times want replace something string something else use replace method replace replace 4 string containing number 4 take look python beginners obviously look character sequence characters dont exist string nothing going happen example try replace x 4 obviously dont x nothing going happen also like upper method replace method going modify original string going return new string strings python many programming languages immutable change create whenever want change string well end new string object memory one last thing want cover tutorial times want see string contains character sequence characters one way using find method talked lets see string contains python run program index first occurrence word python string python also use operator write expression like type string python type special keyword python call operator type name variable expression checking see python course see python code readable like plain english run program instead seeing index first occurrence python see boolean value desirable lot cases next going look arithmetic operations tutorial im going show arithmetic operators python arithmetic operators math example add numbers subtract multiply lets print 10 plus 3 let run program 13 addition operator also subtraction multiplication division technically two different types division operators division one slash another two slashes lets look differences use single slash get floating point number number decimal point use double slashes get integer whole number also modulus operator indicated percent sign returns remainder division ten three one finally exponent operator indicated two asterisks 10 power three run get thousand operators saw augmented assignment operator let explain means lets say variable called x set 10 want increment value x 3 write code like x equals x plus 3 python executes code going evaluate expression piece code result expression 10 plus 3 13 store 13 x another way achieve result using less code type x plus equal three line three exactly identical line two called augmented assignment operator assignment operator augmented enhanced also use subtraction decrease value x 3 use multiplication arithmetic operators python right let ask question im going declare variable called x set 10 plus 3 times 2 think result expression basic math question unfortunately lot people fail answer answer 16 heres reason math concept called operator precedence determines order operators applied multiplication division higher order part expression gets evaluated first 2 times 3 6 result added 10 result expression 16 python operator precedence exactly like math always change using parenthesis example expression want 10 plus 3 evaluated first wrap parenthesis like execute code going see 26 10 plus 3 13 divided 2 26 lets verify print x get 26 learn arithmetic operators python python another set operators called comparison operators use operators compare values let show im going declare variable called x set expression like 3 greater 2 piece code expression called boolean expression produces boolean value case 3 greater 2 result expression boolean true print x get true terminal greater operator also greater equal less less equal equality operator indicated two equal signs confuse assignment operator comparing three two equality run program see false 3 equal 2 heres equality operator also equality operator indicated exclamation mark followed equal sign lets quickly recap comparison operators python greater greater equal less less equal equal equal operators extremely important real python programs quite often compare values evaluate certain conditions youre going see soon python another set operators called logical operators use operators build complex rules conditions let show im going declare variable called price set 25 lets print boolean expression like price greater 10 lets say want check see price 10 30 use logical operator type right type another boolean expression surprise less 30 operator boolean expressions return true result entire expression true take look case get true price 10 30 dollars also operator operator least one boolean expressions returns true result entire expression true demonstrate im going change price 5 lets see python going execute code first going look boolean expression price greater 10 keep going look second boolean expression price less 30 sure result entire expression true take look go also operator basically inverses values give let show going one boolean expression price greater 10 result expression false apply operator inverse false true run program get true lets quickly recap python three logical operators logical returns true expressions return true logical returns true least one expression returns true inverses value give tutorial going talk statements python use statements make decisions programs example declare variable called temperature depending value variable print different messages terminal let show heres temperature variable set 35 lets say temperature greater 30 want print message saying hot day type type condition use comparison operators type temperature greater 30 add colon see happens press enter character indented represents block code code write executed condition true otherwise going executed let show going print hot day way note ive surrounded string double quotes single quote apostrophe couldnt declare string like single quotes typed hot day look python gets confused thinks single code represents end string doesnt recognize subsequent characters okay thats use double quotes apostrophe string hot day press enter carrot indented code right part block get executed condition true print second message drink plenty water terminate block press enter press shift tab carrot longer indented code write always get executed matter whether condition true c based programming languages like c plus c sharp java javascript present block code using curly braces start block code using left brace end using right brace python dont curly braces use indentation represent block code okay case two lines indented means part block code lets run program see happens see two messages temperature greater 30 change temperature 25 run program dont see anything okay block lets print done code indented always get executed part block okay take look heres message lets add second condition temperature greater 30 means less equal 30 im gon na add second condition temperature 20 30 want print nice day type l short else type second condition temperature greater 20 add colon press enter new block print nice day condition true means temperature greater 20 less equal 30 called comment grayed real code note add program python going execute whenever type pound sign treated comment okay condition true going see message terminal lets run program verify go temperature 25 thats see message many conditions want limitations okay lets add another condition l temperature greater 10 going print bit cold case condition true means temperature greater 10 less equal 20 finally temperature less 10 lets print message saying cold day type else add colon new block code get executed none conditions true print called use statements make decisions programs heres great exercise practice learned far want write weight converter program like program asking weight enter 170 next asking weight kilograms pounds type k kilograms l pounds type lowercase l uppercase l doesnt matter lets go lowercase l tells weight kilogram 765 go ahead spend 5 minutes exercise use comment box share code others youre done come back see solution first call input function ask first question wait get result store variable called weight next call input function one time ask second question kilogram pounds get result store variable called unit going use statement want check see unit equals k convert weight pounds print terminal however code type lowercase k condition going true earlier told python case sensitive language need convert string uppercase earlier talked string methods type dot see functions methods available string object use upper method returns new string case condition true first need convert weight pounds declare new variable called converted get weight divide 045 print terminal say weight pounds append converted terminate block press shift tab else colon condition true means weight entered pounds need convert kilograms declare variable converted set weight times 045 print weight kilograms concatenate string converter right need terminate block press enter shift tab good run program going see error let show lets run im going enter 170 type lowercase l okay heres error cant multiply sequence nonend type float got error try multiply weight 045 line seven code reason happening wait variable storing string object earlier told input function always returns string need convert weight number either use end float function lets run program one time 170 pounds heres second error concatenate string float string error occurred try print weight kilograms look line seven case weight integer multiplying integer float result operation going float line eight trying concatenate combine string float python doesnt know execute code solve problem need convert flow string use builtin stir function lets run program see happens 170 pounds heres weight kilograms lets try entering weight kilograms run one time lets say 76 kilos get familiar error concatenate string string float error occurred line five try concatenate string float need convert string object lets run program one time 76 kilos equal 168 pounds hey guys wanted let know online coding school codewoodmoshcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video tutorial going talk loops python use loops repeat block code multiple times example lets say want print numbers one five poor way writing code like print one print two print 3 print 4 print 5 bad approach well wanted print numbers 1 1 million dont want write 1 million lines code line printing number use loops well start declaring variable like set initial number lets say one type type condition use comparison operators lets say less 5 less equal 5 long condition true code write inside block get executed type colon press enter block code block print need increment one set plus one dont always one block code get executed indefinitely never terminate basically program continue running runs memory first iteration 1 less 5 python going execute block code print 1 terminal becomes 2 control moves back python evaluates condition 2 less equal 5 condition true python going execute block one time second iteration going see two terminal become three continue condition longer true let show lets run program see numbers one five beauty loops easily change five one thousand way im separating three digits using underscore makes number readable dont add makes code readable lets run program see numbers 1 1000 much easier 1000 lines code printing number okay let show something really cool im going change 10 instead printing want print expression im going multiply string asterisk might confused earlier told python concatenate number string im using multiplication operator well different multiply number string repeat string based value number one gon na see one asterisk five going see five asterisks let show run program see triangle shape first iteration one see one asterisk every iteration incremented one see one extra asterisk finally last iteration 10 see 10 asterisks terminal learned three types data python numbers integers floats booleans strings refer primitive basic types python python bunch complex types well complex types useful building real applications tutorial going talk lists use lists whenever want represent list objects like list numbers list names let show im going declare variable called names set list names add square brackets represent list add one objects inside list list add bunch names like john bob marsh sam mary separate element items using comma okay lets print list print names take look comes exactly like wrote also get individual elements list example want get first element list type pair square brackets inside square brackets type index index first element list zero run program going see john terminal go python also use negative index feature personally seen programming languages 0 represents first element list think negative 1 represents represents last element list lets verify lets run program heres mary negative 2 well represents second element end list lets run program heres also change object given index example lets say made mistake john spelled h need reset type names zero treat like regular variable set new value set john without h lets print list heres updated list beautiful also select range values example lets say interested first three names type square brackets need type two indexes start index end index start index zero want start end index going zero one two plus one thats going three add colon three python going return elements start index end index excluding end index going return elements index 0 1 2 take look first three names way expression modify original list returns new list right print statement print original list see changed use lists python earlier told strengths python objects objects programming kind like objects real world like mobile phone bicycle remote control tv certain capabilities type string press dot see functions methods available string object python lists also objects bunch methods adding items removing let show im going declare list numbers lets say 1 2 3 4 5 add new element end list use append method type numbers append type 6 lets print list heres updated list beautiful want insert number somewhere middle beginning use insert method going call insert method top go view menu look parameter info look shortcut mac computer command p windows probably control p use shortcut see values method expects first value method expects index value type value integer want insert value beginning list pass 0 index first element right lets pass 0 second value highlighted second value object type basically means type pass number pass boolean pass string pass list type objects python im going pass negative 1 lets run program see negative 1 appeared beginning list also method removing items lets call remove three lets run program three gone one two four five wan na remove items list call clear method clear method doesnt expect values lets run program list empty sometimes want know given item exists list use operator lets remove line instead printing numbers list im going print expression one numbers using operator checking see one numbers list boolean expression returns boolean value take look get true obviously search value doesnt exist list like 10 get false okay finally times want know many items list use builtin lend function lets print len numbers len builtin function like print function highlighted purple returns number elements list take look five elements list writing python programs times want iterate list access item individually let show im going declare list numbers one two three four five print list comes exactly like wrote using square bracket notation wanted print item separate line use loop let show going print entire list instead going type 4 declare variable called loop variable lets call item type numbers next add colon start block code call loop loop iterate items list iteration item variable going hold one value first iteration item going equal 1 second iteration going equal 2 print item run program see item new line use loop could also achieve thing using loop code would little bit longer let show would start declaring loop variable outside loop lets say set zero say less need find many items list use len function len numbers long less length list print use square bracket notation get element index numbers need increment one equals plus one lets run program see get get numbers one five coming loop get numbers one five one time coming loop compare two approaches definitely see implementation using loop shorter easier understand dont use square bracket notation dont call len function dont declare variable loop variable increment explicitly loop iteration item variable automatically hold one value list tutorial going talk range function python use range function generate sequence numbers let show type range builtin function like print input functions pass value like 5 return range object range object object store sequence numbers let show lets call numbers range object object going numbers 0 5 excluding 5 print numbers going see message range zero five actual numbers default representation range object see actual numbers need iterate range object using loop last video learned iterate list using loop also iterate range object using loop basically use loop object represents sequence objects instead printing numbers going use loop number numbers colon going print number take look see numbers zero four range five generates sequence numbers starting zero number specify supply two values first value going considered starting value second value going considered ending value going excluded range 5 10 going generate numbers 5 9 take look go also supply third value used step lets say instead sequence numbers like five six seven eight nine wan na jump two numbers time 5 7 9 pass 2 step take look get odd numbers 5 7 9 range function python like quite often see range function used part loop dont really need store result separate variable call range function right using numbers variable type range five return range object holding numbers zero four take look go dont really need store result separate variable like numbers go tutorial going talk tuples python tuples kind like lists use store sequence objects tuples immutable means change create let show im going start defining list numbers 1 2 3 use square brackets define list parenthesis define tuple numbers variable storing tuple try reassign lets say first element going get error topple object support item assignment meant tuples immutable theyre unchangeable also type numbers dot dont see methods like append insert remove count index count returns number occurrences element example lets say two threes tuple call count three return 2 method index returns index first occurrence given element methods see start underscore theyre called magic methods advanced topic ive covered detail complete python programming course youre interested link video tuples immutable change create practically speaking time would using lists times create list objects want make sure somewhere program someone else going accidentally modify list thats case use tuple hey guys wanted let know online coding school codewoodmarchcom find plenty courses web mobile development fact comprehensive python course teaches everything python basics advanced concepts watch tutorial want learn may want look python course comes 30 day money back guarantee certificate completion add resume case youre interested link video hey
kqtD5dpn9C8, python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django.
kqtD5dpn9C8, python tutorial youre going learn everything need know start programming python want learn python programming data science machine learning web development python tutorial perfect place learn python dont need prior knowledge python programming general im going teach everything scratch im mosh hamadani ive taught millions people code channel youre new make sure subscribe upload new videos every week lets jump get started right get started let give ideas python thats common question python multipurpose programming language use variety different tasks use python machine learning ai fact python number one language machine learning data science projects python also popular web development using python framework called django build amazing websites five websites powered python django youtube instagram spotify dropbox pinterest also use python automation python save time increase productivity automating repetitive tasks.
